a = 7

def my_value(b)
  b = a + a
end

my_value(a)
puts a

Pre-run answer:
  There will be an Undefined variable (or something similar) error because there is no variable 'a' defined implicitly or explicity inside the method.

  'a' will remain 7 after the method fails.

Post-run answer:

NameError: undefined local variable or method `a' for main:Object
  from (irb):61:in `my_value'
  from (irb):64
  from /Users/knetterv/.rvm/rubies/ruby-2.4.0/bin/irb:11:in `<main>'
2.4.0 :065 > puts a
7

If this were a proc, it would work but a would still remain 7 outside the scope.

2.4.0 :065 > puts a
7
 => nil
2.4.0 :066 > my_value = Proc.new do
2.4.0 :067 >     |b|
2.4.0 :068 >     b = a + a
2.4.0 :069?>   end
 => #<Proc:0x007ffa198ad7f0@(irb):66>
 ...
 2.4.0 :072 > my_value.call(a)
 => 14
2.4.0 :073 > a
 => 7
 
